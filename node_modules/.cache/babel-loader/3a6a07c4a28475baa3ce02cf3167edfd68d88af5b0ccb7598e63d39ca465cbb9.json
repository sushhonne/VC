{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUSHMITHA HONNE\\\\Desktop\\\\NOTES\\\\VisualStudioNotes\\\\React\\\\honne\\\\src\\\\hook.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hooks = () => {\n  _s();\n  let [value, setValue] = useState(\"change\");\n  let change = () => {\n    setValue(\"you changed\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hooks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onclick: change,\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Hooks, \"ZaBPtSAx6bajlZnhsA0yLGv8VZU=\");\n_c = Hooks;\nexport default Hooks;\n\n// const Hooks = () => {\n//     let[count,setCount]=useState(0)\n//     let increase=()=>{\n//         if(count<21)\n//         setCount(count++)}\n//     let decrease=()=>{\n//         if(count>0)\n//         setCount(count--)}\n//     let reset=()=>{setCount(count=0)}\n//     return ( \n//         <div className=\"hooks\">\n//             <h1>{count}</h1>\n//             <button onClick={increase}>Increase</button>\n//             <button onClick={reset}>reset</button>\n//             <button onClick={decrease}>Decrease</button>\n//         </div>\n//      );\n// }\n// export default Hooks;\n\n//o/p:0=>(upon clicking the button number increases)\n// const Hooks = () => {\n//     let [count,setCount]=useState(0)\n//     let handleClick=()=>{\n//         setCount(count++)\n//     }\n//     return ( \n//         <div className=\"hooks\">\n//             <h1>You clicked {count} times</h1>\n//             <button onClick={handleClick}>Count</button>\n//         </div>\n//      );\n// }\n\n// export default Hooks;\n\n//o/p: change me=>(upon clicking the button)you changed\n// const Hooks = () => {\n//     let [value,setValue]=useState('Change me')\n//     let handleClick=()=>{\n//         setValue(\"you changed\")\n//     }\n//     return ( \n//         <div className=\"hooks\">\n//             <h1>Use state Hooks</h1>\n//             <h2>{value}</h2>\n//             <button onClick={handleClick}>Click</button>\n//         </div>\n//      );\n// }\n\n// export default Hooks;\nvar _c;\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"names":["useState","Hooks","value","setValue","change"],"sources":["C:/Users/SUSHMITHA HONNE/Desktop/NOTES/VisualStudioNotes/React/honne/src/hook.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Hooks = () => {\r\n    let[value,setValue]=useState(\"change\")\r\n    let change=()=>{\r\n        setValue(\"you changed\")\r\n    }\r\n    return ( \r\n    <div className=\"hooks\">\r\n        <h2>{value}</h2>\r\n        <button onclick={change}>Change</button>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Hooks;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Hooks = () => {\r\n//     let[count,setCount]=useState(0)\r\n//     let increase=()=>{\r\n//         if(count<21)\r\n//         setCount(count++)}\r\n//     let decrease=()=>{\r\n//         if(count>0)\r\n//         setCount(count--)}\r\n//     let reset=()=>{setCount(count=0)}\r\n//     return ( \r\n//         <div className=\"hooks\">\r\n//             <h1>{count}</h1>\r\n//             <button onClick={increase}>Increase</button>\r\n//             <button onClick={reset}>reset</button>\r\n//             <button onClick={decrease}>Decrease</button>\r\n//         </div>\r\n//      );\r\n// }\r\n// export default Hooks;\r\n\r\n\r\n\r\n//o/p:0=>(upon clicking the button number increases)\r\n// const Hooks = () => {\r\n//     let [count,setCount]=useState(0)\r\n//     let handleClick=()=>{\r\n//         setCount(count++)\r\n//     }\r\n//     return ( \r\n//         <div className=\"hooks\">\r\n//             <h1>You clicked {count} times</h1>\r\n//             <button onClick={handleClick}>Count</button>\r\n//         </div>\r\n//      );\r\n// }\r\n \r\n// export default Hooks;\r\n\r\n\r\n\r\n//o/p: change me=>(upon clicking the button)you changed\r\n// const Hooks = () => {\r\n//     let [value,setValue]=useState('Change me')\r\n//     let handleClick=()=>{\r\n//         setValue(\"you changed\")\r\n//     }\r\n//     return ( \r\n//         <div className=\"hooks\">\r\n//             <h1>Use state Hooks</h1>\r\n//             <h2>{value}</h2>\r\n//             <button onClick={handleClick}>Click</button>\r\n//         </div>\r\n//      );\r\n// }\r\n \r\n// export default Hooks;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,IAAG,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACH,QAAQ,CAAC,QAAQ,CAAC;EACtC,IAAII,MAAM,GAAC,MAAI;IACXD,QAAQ,CAAC,aAAa,CAAC;EAC3B,CAAC;EACD,oBACA;IAAK,SAAS,EAAC,OAAO;IAAA,wBAClB;MAAA,UAAKD;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAQ,OAAO,EAAEE,MAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QACtC;AAEV,CAAC;AAAA,GAXKH,KAAK;AAAA,KAALA,KAAK;AAaX,eAAeA,KAAK;;AAoBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}